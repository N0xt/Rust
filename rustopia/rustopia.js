document.addEventListener('DOMContentLoaded', function () {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤
    const serverBtns = document.querySelectorAll('.server-btn'); 
    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    const backBtn = document.querySelector('.back-btn'); 

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (backBtn) {
        backBtn.addEventListener('click', function () {
            window.history.back();
        });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
    serverBtns.forEach((btn) => {
        btn.addEventListener('click', function () {
            const serverUrl = btn.getAttribute('data-url');
            if (serverUrl) window.open(serverUrl, '_blank');
        });
    });
});

// ======= –ü–µ—Ä–µ–≤–æ–¥—ã =======
const translations = {
  ru: {
    title: "SurviveNet",
    heading: "Rustopia ‚Äî –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤",
    play: "‚ñ∂",
    back: "‚Üê –ù–∞–∑–∞–¥"
  },
  en: {
    title: "SurviveNet",
    heading: "Rustopia ‚Äî Server List",
    play: "‚ñ∂",
    back: "‚Üê Back"
  },
  ua: {
    title: "SurviveNet",
    heading: "Rustopia ‚Äî –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä—ñ–≤",
    play: "‚ñ∂",
    back: "‚Üê –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å"
  }
};

// ======= –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞ =======
function setLanguage(lang) {
  const dict = translations[lang];
  if (!dict) return;

  document.title = dict.title;

  const h1 = document.querySelector("h1");
  if (h1) h1.textContent = dict.heading;

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª "‚ñ∂" —É –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
  const serverBtns = document.querySelectorAll(".server-btn");
  serverBtns.forEach(btn => {
    const arrow = btn.querySelector("span");
    if (arrow) arrow.textContent = dict.play;
  });

  // ======= –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" (—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç) =======
  const backBtn = document.querySelector(".back-btn");
  if (backBtn) {
    backBtn.textContent = dict.back; // –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ —è–∑—ã–∫—É
    // –ù–ï –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–ª–∏–∫, –æ–Ω —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤—ã—à–µ
  }

  localStorage.setItem("siteLang", lang);

  const switcherSpan = document.querySelector("#lang-switcher span");
  if (switcherSpan) switcherSpan.textContent = lang.toUpperCase();
}

// ======= –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–∞ =======
function createLangSwitcher() {
  const container = document.createElement("div");
  container.id = "lang-switcher";
  container.style.cssText = `
    position: fixed;
    top: 10px;
    right: 10px;
    background: #222;
    padding: 8px 12px;
    border-radius: 8px;
    color: white;
    font-family: sans-serif;
    cursor: pointer;
    user-select: none;
    z-index: 9999;
  `;
  container.innerHTML = `üåê <span>RU</span>`;

  const menu = document.createElement("div");
  menu.style.cssText = `
    display: none;
    position: absolute;
    right: 0;
    margin-top: 5px;
    background: #333;
    border-radius: 6px;
    overflow: hidden;
  `;

  ["ru", "en", "ua"].forEach(lang => {
    const item = document.createElement("div");
    item.textContent = lang.toUpperCase();
    item.style.cssText = `padding: 6px 12px; cursor: pointer;`;
    item.addEventListener("click", () => {
      setLanguage(lang);
      menu.style.display = "none";
    });
    item.addEventListener("mouseover", () => item.style.background = "#444");
    item.addEventListener("mouseout", () => item.style.background = "transparent");
    menu.appendChild(item);
  });

  container.appendChild(menu);

  container.addEventListener("click", () => {
    menu.style.display = menu.style.display === "block" ? "none" : "block";
  });

  document.body.appendChild(container);

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  const savedLang = localStorage.getItem("siteLang") || "ru";
  setLanguage(savedLang);
}

// ======= –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è =======
document.addEventListener("DOMContentLoaded", () => {
  createLangSwitcher();
});
